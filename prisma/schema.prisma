// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  name       String       @unique
  password   String
  createdAt  DateTime     @default(now())
  Image      Image[]
  Collection Collection[]
}

model Image {
  id         String       @id @default(uuid())
  imgURL     String
  source     String?
  published  Boolean      @default(false)
  uploaderId String?
  uploader   User?        @relation(fields: [uploaderId], references: [id], onDelete: SetNull)
  Collection Collection[]
  ImageTag   ImageTag[]
}

model Collection {
  id      String @id @default(uuid())
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model ImageTag {
  id      Int    @id @default(autoincrement())
  image   Image  @relation(fields: [imageId], references: [id])
  imageId String
  tag     Tag    @relation(fields: [tagId], references: [id])
  tagId   Int
}

model Tag {
  id         Int         @id @default(autoincrement())
  name       String
  category   TagCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  ImageTag   ImageTag[]
}

model TagCategory {
  id   Int    @id @default(autoincrement())
  name String
  Tag  Tag[]
}
